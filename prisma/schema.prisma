// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  name           String
  avatarUrl      String?
  hashedPassword String
  isEmailVerified Boolean  @default(false)
  twoFactorEnabled Boolean @default(false)
  twoFactorSecret String?
  twoFactorBackupCodes String?
  trustedDevices String?   @default("[]")
  loginAttempts Int       @default(0)
  lastLoginAttempt DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  tasks          Task[]
  routines       Routine[]
  sessions       Session[]
  keys           Key[]
  navItems       NavItem[]
}

model Task {
  id            String    @id @default(cuid())
  title         String
  description   String?
  status        String    @default("todo") // todo, inProgress, done
  priority      String
  dueDate       DateTime?
  estimatedTime Int?      // 分単位
  actualTime    Int?      // 分単位
  startTime     DateTime? // タスク開始時刻
  endTime       DateTime? // タスク終了時刻
  duration      Int?      // 秒単位
  routineId     String?
  userId        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  routine       Routine?  @relation(fields: [routineId], references: [id])

  @@index([userId])
  @@index([routineId])
}

model Routine {
  id            String   @id @default(cuid())
  title         String
  description   String?
  frequency     String   @default("daily") // daily, weekly, monthly
  priority      String   @default("medium") // low, medium, high
  estimatedTime Int // 分単位
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks         Task[]

  @@index([userId])
}

// 認証関連のテーブル（Lucia用）
model Session {
  id             String   @id @default(cuid())
  userId         String
  expiresAt      DateTime
  createdAt      DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Key {
  id              String  @id
  userId          String
  hashedPassword  String?
  user            User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model NavItem {
  id        String   @id @default(cuid())
  title     String
  href      String
  icon      String?
  order     Int      @default(0)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
